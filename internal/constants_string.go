// Code generated by "stringer -output=constants_string.go -type=TagType --trimprefix=Tag"; DO NOT EDIT.

package internal

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TagHeartbeatPing-0]
	_ = x[TagHeartbeatAck-1]
	_ = x[TagLoginRequest-2]
	_ = x[TagLoginResponse-3]
	_ = x[TagClose-4]
	_ = x[TagMessageStanza-5]
	_ = x[TagPresenceStanza-6]
	_ = x[TagIqStanza-7]
	_ = x[TagDataMessageStanza-8]
	_ = x[TagBatchPresenceStanza-9]
	_ = x[TagStreamErrorStanza-10]
	_ = x[TagHTTPRequest-11]
	_ = x[TagHTTPResponse-12]
	_ = x[TagBindAccountRequest-13]
	_ = x[TagBindAccountResponse-14]
	_ = x[TagTalkMetadata-15]
	_ = x[TagNumProtoTypes-16]
}

const _TagType_name = "HeartbeatPingHeartbeatAckLoginRequestLoginResponseCloseMessageStanzaPresenceStanzaIqStanzaDataMessageStanzaBatchPresenceStanzaStreamErrorStanzaHTTPRequestHTTPResponseBindAccountRequestBindAccountResponseTalkMetadataNumProtoTypes"

var _TagType_index = [...]uint8{0, 13, 25, 37, 50, 55, 68, 82, 90, 107, 126, 143, 154, 166, 184, 203, 215, 228}

func (i TagType) String() string {
	if i >= TagType(len(_TagType_index)-1) {
		return "TagType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TagType_name[_TagType_index[i]:_TagType_index[i+1]]
}
