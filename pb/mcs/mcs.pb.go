// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mcs.proto

package mcs_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ClientEvent_Type int32

const (
	ClientEvent_UNKNOWN ClientEvent_Type = 0
	// Count of discarded events if the buffer filled up and was trimmed.
	ClientEvent_DISCARDED_EVENTS ClientEvent_Type = 1
	// Failed connection event: the connection failed to be established or we
	// had a login error.
	ClientEvent_FAILED_CONNECTION ClientEvent_Type = 2
	// Successful connection event: information about the last successful
	// connection, including the time at which it was established.
	ClientEvent_SUCCESSFUL_CONNECTION ClientEvent_Type = 3
)

var ClientEvent_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "DISCARDED_EVENTS",
	2: "FAILED_CONNECTION",
	3: "SUCCESSFUL_CONNECTION",
}

var ClientEvent_Type_value = map[string]int32{
	"UNKNOWN":               0,
	"DISCARDED_EVENTS":      1,
	"FAILED_CONNECTION":     2,
	"SUCCESSFUL_CONNECTION": 3,
}

func (x ClientEvent_Type) Enum() *ClientEvent_Type {
	p := new(ClientEvent_Type)
	*p = x
	return p
}

func (x ClientEvent_Type) String() string {
	return proto.EnumName(ClientEvent_Type_name, int32(x))
}

func (x *ClientEvent_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientEvent_Type_value, data, "ClientEvent_Type")
	if err != nil {
		return err
	}
	*x = ClientEvent_Type(value)
	return nil
}

func (ClientEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{6, 0}
}

type LoginRequest_AuthService int32

const (
	LoginRequest_ANDROID_ID LoginRequest_AuthService = 2
)

var LoginRequest_AuthService_name = map[int32]string{
	2: "ANDROID_ID",
}

var LoginRequest_AuthService_value = map[string]int32{
	"ANDROID_ID": 2,
}

func (x LoginRequest_AuthService) Enum() *LoginRequest_AuthService {
	p := new(LoginRequest_AuthService)
	*p = x
	return p
}

func (x LoginRequest_AuthService) String() string {
	return proto.EnumName(LoginRequest_AuthService_name, int32(x))
}

func (x *LoginRequest_AuthService) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LoginRequest_AuthService_value, data, "LoginRequest_AuthService")
	if err != nil {
		return err
	}
	*x = LoginRequest_AuthService(value)
	return nil
}

func (LoginRequest_AuthService) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{7, 0}
}

type IqStanza_IqType int32

const (
	IqStanza_GET      IqStanza_IqType = 0
	IqStanza_SET      IqStanza_IqType = 1
	IqStanza_RESULT   IqStanza_IqType = 2
	IqStanza_IQ_ERROR IqStanza_IqType = 3
)

var IqStanza_IqType_name = map[int32]string{
	0: "GET",
	1: "SET",
	2: "RESULT",
	3: "IQ_ERROR",
}

var IqStanza_IqType_value = map[string]int32{
	"GET":      0,
	"SET":      1,
	"RESULT":   2,
	"IQ_ERROR": 3,
}

func (x IqStanza_IqType) Enum() *IqStanza_IqType {
	p := new(IqStanza_IqType)
	*p = x
	return p
}

func (x IqStanza_IqType) String() string {
	return proto.EnumName(IqStanza_IqType_name, int32(x))
}

func (x *IqStanza_IqType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IqStanza_IqType_value, data, "IqStanza_IqType")
	if err != nil {
		return err
	}
	*x = IqStanza_IqType(value)
	return nil
}

func (IqStanza_IqType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{12, 0}
}

//*
//TAG: 0
type HeartbeatPing struct {
	StreamId             *int32   `protobuf:"varint,1,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	LastStreamIdReceived *int32   `protobuf:"varint,2,opt,name=last_stream_id_received,json=lastStreamIdReceived" json:"last_stream_id_received,omitempty"`
	Status               *int64   `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatPing) Reset()         { *m = HeartbeatPing{} }
func (m *HeartbeatPing) String() string { return proto.CompactTextString(m) }
func (*HeartbeatPing) ProtoMessage()    {}
func (*HeartbeatPing) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{0}
}

func (m *HeartbeatPing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatPing.Unmarshal(m, b)
}
func (m *HeartbeatPing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatPing.Marshal(b, m, deterministic)
}
func (m *HeartbeatPing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatPing.Merge(m, src)
}
func (m *HeartbeatPing) XXX_Size() int {
	return xxx_messageInfo_HeartbeatPing.Size(m)
}
func (m *HeartbeatPing) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatPing.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatPing proto.InternalMessageInfo

func (m *HeartbeatPing) GetStreamId() int32 {
	if m != nil && m.StreamId != nil {
		return *m.StreamId
	}
	return 0
}

func (m *HeartbeatPing) GetLastStreamIdReceived() int32 {
	if m != nil && m.LastStreamIdReceived != nil {
		return *m.LastStreamIdReceived
	}
	return 0
}

func (m *HeartbeatPing) GetStatus() int64 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

//*
//TAG: 1
type HeartbeatAck struct {
	StreamId             *int32   `protobuf:"varint,1,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	LastStreamIdReceived *int32   `protobuf:"varint,2,opt,name=last_stream_id_received,json=lastStreamIdReceived" json:"last_stream_id_received,omitempty"`
	Status               *int64   `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatAck) Reset()         { *m = HeartbeatAck{} }
func (m *HeartbeatAck) String() string { return proto.CompactTextString(m) }
func (*HeartbeatAck) ProtoMessage()    {}
func (*HeartbeatAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{1}
}

func (m *HeartbeatAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatAck.Unmarshal(m, b)
}
func (m *HeartbeatAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatAck.Marshal(b, m, deterministic)
}
func (m *HeartbeatAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatAck.Merge(m, src)
}
func (m *HeartbeatAck) XXX_Size() int {
	return xxx_messageInfo_HeartbeatAck.Size(m)
}
func (m *HeartbeatAck) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatAck.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatAck proto.InternalMessageInfo

func (m *HeartbeatAck) GetStreamId() int32 {
	if m != nil && m.StreamId != nil {
		return *m.StreamId
	}
	return 0
}

func (m *HeartbeatAck) GetLastStreamIdReceived() int32 {
	if m != nil && m.LastStreamIdReceived != nil {
		return *m.LastStreamIdReceived
	}
	return 0
}

func (m *HeartbeatAck) GetStatus() int64 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type ErrorInfo struct {
	Code                 *int32     `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message              *string    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Type                 *string    `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Extension            *Extension `protobuf:"bytes,4,opt,name=extension" json:"extension,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ErrorInfo) Reset()         { *m = ErrorInfo{} }
func (m *ErrorInfo) String() string { return proto.CompactTextString(m) }
func (*ErrorInfo) ProtoMessage()    {}
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{2}
}

func (m *ErrorInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorInfo.Unmarshal(m, b)
}
func (m *ErrorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorInfo.Marshal(b, m, deterministic)
}
func (m *ErrorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorInfo.Merge(m, src)
}
func (m *ErrorInfo) XXX_Size() int {
	return xxx_messageInfo_ErrorInfo.Size(m)
}
func (m *ErrorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorInfo proto.InternalMessageInfo

func (m *ErrorInfo) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ErrorInfo) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ErrorInfo) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *ErrorInfo) GetExtension() *Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

type Setting struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Setting) Reset()         { *m = Setting{} }
func (m *Setting) String() string { return proto.CompactTextString(m) }
func (*Setting) ProtoMessage()    {}
func (*Setting) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{3}
}

func (m *Setting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Setting.Unmarshal(m, b)
}
func (m *Setting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Setting.Marshal(b, m, deterministic)
}
func (m *Setting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Setting.Merge(m, src)
}
func (m *Setting) XXX_Size() int {
	return xxx_messageInfo_Setting.Size(m)
}
func (m *Setting) XXX_DiscardUnknown() {
	xxx_messageInfo_Setting.DiscardUnknown(m)
}

var xxx_messageInfo_Setting proto.InternalMessageInfo

func (m *Setting) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Setting) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type HeartbeatStat struct {
	Ip                   *string  `protobuf:"bytes,1,req,name=ip" json:"ip,omitempty"`
	Timeout              *bool    `protobuf:"varint,2,req,name=timeout" json:"timeout,omitempty"`
	IntervalMs           *int32   `protobuf:"varint,3,req,name=interval_ms,json=intervalMs" json:"interval_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatStat) Reset()         { *m = HeartbeatStat{} }
func (m *HeartbeatStat) String() string { return proto.CompactTextString(m) }
func (*HeartbeatStat) ProtoMessage()    {}
func (*HeartbeatStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{4}
}

func (m *HeartbeatStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatStat.Unmarshal(m, b)
}
func (m *HeartbeatStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatStat.Marshal(b, m, deterministic)
}
func (m *HeartbeatStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatStat.Merge(m, src)
}
func (m *HeartbeatStat) XXX_Size() int {
	return xxx_messageInfo_HeartbeatStat.Size(m)
}
func (m *HeartbeatStat) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatStat.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatStat proto.InternalMessageInfo

func (m *HeartbeatStat) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *HeartbeatStat) GetTimeout() bool {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return false
}

func (m *HeartbeatStat) GetIntervalMs() int32 {
	if m != nil && m.IntervalMs != nil {
		return *m.IntervalMs
	}
	return 0
}

type HeartbeatConfig struct {
	UploadStat           *bool    `protobuf:"varint,1,opt,name=upload_stat,json=uploadStat" json:"upload_stat,omitempty"`
	Ip                   *string  `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
	IntervalMs           *int32   `protobuf:"varint,3,opt,name=interval_ms,json=intervalMs" json:"interval_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatConfig) Reset()         { *m = HeartbeatConfig{} }
func (m *HeartbeatConfig) String() string { return proto.CompactTextString(m) }
func (*HeartbeatConfig) ProtoMessage()    {}
func (*HeartbeatConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{5}
}

func (m *HeartbeatConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatConfig.Unmarshal(m, b)
}
func (m *HeartbeatConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatConfig.Marshal(b, m, deterministic)
}
func (m *HeartbeatConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatConfig.Merge(m, src)
}
func (m *HeartbeatConfig) XXX_Size() int {
	return xxx_messageInfo_HeartbeatConfig.Size(m)
}
func (m *HeartbeatConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatConfig proto.InternalMessageInfo

func (m *HeartbeatConfig) GetUploadStat() bool {
	if m != nil && m.UploadStat != nil {
		return *m.UploadStat
	}
	return false
}

func (m *HeartbeatConfig) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *HeartbeatConfig) GetIntervalMs() int32 {
	if m != nil && m.IntervalMs != nil {
		return *m.IntervalMs
	}
	return 0
}

// ClientEvents are used to inform the server of failed and successful
// connections.
type ClientEvent struct {
	// Common fields [1-99]
	Type *ClientEvent_Type `protobuf:"varint,1,opt,name=type,enum=mcs_proto.ClientEvent_Type" json:"type,omitempty"`
	// Fields for DISCARDED_EVENTS messages [100-199]
	NumberDiscardedEvents *uint32 `protobuf:"varint,100,opt,name=number_discarded_events,json=numberDiscardedEvents" json:"number_discarded_events,omitempty"`
	// Fields for FAILED_CONNECTION and SUCCESSFUL_CONNECTION messages [200-299]
	// Network type is a value in net::NetworkChangeNotifier::ConnectionType.
	NetworkType             *int32  `protobuf:"varint,200,opt,name=network_type,json=networkType" json:"network_type,omitempty"`
	TimeConnectionStartedMs *uint64 `protobuf:"varint,202,opt,name=time_connection_started_ms,json=timeConnectionStartedMs" json:"time_connection_started_ms,omitempty"`
	TimeConnectionEndedMs   *uint64 `protobuf:"varint,203,opt,name=time_connection_ended_ms,json=timeConnectionEndedMs" json:"time_connection_ended_ms,omitempty"`
	// Error code should be a net::Error value.
	ErrorCode *int32 `protobuf:"varint,204,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	// Fields for SUCCESSFUL_CONNECTION messages [300-399]
	TimeConnectionEstablishedMs *uint64  `protobuf:"varint,300,opt,name=time_connection_established_ms,json=timeConnectionEstablishedMs" json:"time_connection_established_ms,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *ClientEvent) Reset()         { *m = ClientEvent{} }
func (m *ClientEvent) String() string { return proto.CompactTextString(m) }
func (*ClientEvent) ProtoMessage()    {}
func (*ClientEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{6}
}

func (m *ClientEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientEvent.Unmarshal(m, b)
}
func (m *ClientEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientEvent.Marshal(b, m, deterministic)
}
func (m *ClientEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientEvent.Merge(m, src)
}
func (m *ClientEvent) XXX_Size() int {
	return xxx_messageInfo_ClientEvent.Size(m)
}
func (m *ClientEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ClientEvent proto.InternalMessageInfo

func (m *ClientEvent) GetType() ClientEvent_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ClientEvent_UNKNOWN
}

func (m *ClientEvent) GetNumberDiscardedEvents() uint32 {
	if m != nil && m.NumberDiscardedEvents != nil {
		return *m.NumberDiscardedEvents
	}
	return 0
}

func (m *ClientEvent) GetNetworkType() int32 {
	if m != nil && m.NetworkType != nil {
		return *m.NetworkType
	}
	return 0
}

func (m *ClientEvent) GetTimeConnectionStartedMs() uint64 {
	if m != nil && m.TimeConnectionStartedMs != nil {
		return *m.TimeConnectionStartedMs
	}
	return 0
}

func (m *ClientEvent) GetTimeConnectionEndedMs() uint64 {
	if m != nil && m.TimeConnectionEndedMs != nil {
		return *m.TimeConnectionEndedMs
	}
	return 0
}

func (m *ClientEvent) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *ClientEvent) GetTimeConnectionEstablishedMs() uint64 {
	if m != nil && m.TimeConnectionEstablishedMs != nil {
		return *m.TimeConnectionEstablishedMs
	}
	return 0
}

//*
//TAG: 2
type LoginRequest struct {
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	// string.
	// mcs.android.com.
	Domain *string `protobuf:"bytes,2,req,name=domain" json:"domain,omitempty"`
	// Decimal android ID
	User     *string `protobuf:"bytes,3,req,name=user" json:"user,omitempty"`
	Resource *string `protobuf:"bytes,4,req,name=resource" json:"resource,omitempty"`
	// Secret
	AuthToken *string `protobuf:"bytes,5,req,name=auth_token,json=authToken" json:"auth_token,omitempty"`
	// Format is: android-HEX_DEVICE_ID
	// The user is the decimal value.
	DeviceId *string `protobuf:"bytes,6,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	// RMQ1 - no longer used
	LastRmqId *int64     `protobuf:"varint,7,opt,name=last_rmq_id,json=lastRmqId" json:"last_rmq_id,omitempty"`
	Setting   []*Setting `protobuf:"bytes,8,rep,name=setting" json:"setting,omitempty"`
	//optional int32 compress = 9;
	ReceivedPersistentId []string       `protobuf:"bytes,10,rep,name=received_persistent_id,json=receivedPersistentId" json:"received_persistent_id,omitempty"`
	AdaptiveHeartbeat    *bool          `protobuf:"varint,12,opt,name=adaptive_heartbeat,json=adaptiveHeartbeat" json:"adaptive_heartbeat,omitempty"`
	HeartbeatStat        *HeartbeatStat `protobuf:"bytes,13,opt,name=heartbeat_stat,json=heartbeatStat" json:"heartbeat_stat,omitempty"`
	// Must be true.
	UseRmq2   *bool  `protobuf:"varint,14,opt,name=use_rmq2,json=useRmq2" json:"use_rmq2,omitempty"`
	AccountId *int64 `protobuf:"varint,15,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// ANDROID_ID = 2
	AuthService *LoginRequest_AuthService `protobuf:"varint,16,opt,name=auth_service,json=authService,enum=mcs_proto.LoginRequest_AuthService" json:"auth_service,omitempty"`
	NetworkType *int32                    `protobuf:"varint,17,opt,name=network_type,json=networkType" json:"network_type,omitempty"`
	Status      *int64                    `protobuf:"varint,18,opt,name=status" json:"status,omitempty"`
	// Events recorded on the client after the last successful connection.
	ClientEvent          []*ClientEvent `protobuf:"bytes,22,rep,name=client_event,json=clientEvent" json:"client_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{7}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *LoginRequest) GetDomain() string {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return ""
}

func (m *LoginRequest) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *LoginRequest) GetResource() string {
	if m != nil && m.Resource != nil {
		return *m.Resource
	}
	return ""
}

func (m *LoginRequest) GetAuthToken() string {
	if m != nil && m.AuthToken != nil {
		return *m.AuthToken
	}
	return ""
}

func (m *LoginRequest) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *LoginRequest) GetLastRmqId() int64 {
	if m != nil && m.LastRmqId != nil {
		return *m.LastRmqId
	}
	return 0
}

func (m *LoginRequest) GetSetting() []*Setting {
	if m != nil {
		return m.Setting
	}
	return nil
}

func (m *LoginRequest) GetReceivedPersistentId() []string {
	if m != nil {
		return m.ReceivedPersistentId
	}
	return nil
}

func (m *LoginRequest) GetAdaptiveHeartbeat() bool {
	if m != nil && m.AdaptiveHeartbeat != nil {
		return *m.AdaptiveHeartbeat
	}
	return false
}

func (m *LoginRequest) GetHeartbeatStat() *HeartbeatStat {
	if m != nil {
		return m.HeartbeatStat
	}
	return nil
}

func (m *LoginRequest) GetUseRmq2() bool {
	if m != nil && m.UseRmq2 != nil {
		return *m.UseRmq2
	}
	return false
}

func (m *LoginRequest) GetAccountId() int64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *LoginRequest) GetAuthService() LoginRequest_AuthService {
	if m != nil && m.AuthService != nil {
		return *m.AuthService
	}
	return LoginRequest_ANDROID_ID
}

func (m *LoginRequest) GetNetworkType() int32 {
	if m != nil && m.NetworkType != nil {
		return *m.NetworkType
	}
	return 0
}

func (m *LoginRequest) GetStatus() int64 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *LoginRequest) GetClientEvent() []*ClientEvent {
	if m != nil {
		return m.ClientEvent
	}
	return nil
}

//*
// TAG: 3
type LoginResponse struct {
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	// Not used.
	Jid *string `protobuf:"bytes,2,opt,name=jid" json:"jid,omitempty"`
	// Null if login was ok.
	Error    *ErrorInfo `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	Setting  []*Setting `protobuf:"bytes,4,rep,name=setting" json:"setting,omitempty"`
	StreamId *int32     `protobuf:"varint,5,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	// Should be "1"
	LastStreamIdReceived *int32           `protobuf:"varint,6,opt,name=last_stream_id_received,json=lastStreamIdReceived" json:"last_stream_id_received,omitempty"`
	HeartbeatConfig      *HeartbeatConfig `protobuf:"bytes,7,opt,name=heartbeat_config,json=heartbeatConfig" json:"heartbeat_config,omitempty"`
	// used by the client to synchronize with the server timestamp.
	ServerTimestamp      *int64   `protobuf:"varint,8,opt,name=server_timestamp,json=serverTimestamp" json:"server_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{8}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *LoginResponse) GetJid() string {
	if m != nil && m.Jid != nil {
		return *m.Jid
	}
	return ""
}

func (m *LoginResponse) GetError() *ErrorInfo {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *LoginResponse) GetSetting() []*Setting {
	if m != nil {
		return m.Setting
	}
	return nil
}

func (m *LoginResponse) GetStreamId() int32 {
	if m != nil && m.StreamId != nil {
		return *m.StreamId
	}
	return 0
}

func (m *LoginResponse) GetLastStreamIdReceived() int32 {
	if m != nil && m.LastStreamIdReceived != nil {
		return *m.LastStreamIdReceived
	}
	return 0
}

func (m *LoginResponse) GetHeartbeatConfig() *HeartbeatConfig {
	if m != nil {
		return m.HeartbeatConfig
	}
	return nil
}

func (m *LoginResponse) GetServerTimestamp() int64 {
	if m != nil && m.ServerTimestamp != nil {
		return *m.ServerTimestamp
	}
	return 0
}

type StreamErrorStanza struct {
	Type                 *string  `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Text                 *string  `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamErrorStanza) Reset()         { *m = StreamErrorStanza{} }
func (m *StreamErrorStanza) String() string { return proto.CompactTextString(m) }
func (*StreamErrorStanza) ProtoMessage()    {}
func (*StreamErrorStanza) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{9}
}

func (m *StreamErrorStanza) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamErrorStanza.Unmarshal(m, b)
}
func (m *StreamErrorStanza) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamErrorStanza.Marshal(b, m, deterministic)
}
func (m *StreamErrorStanza) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamErrorStanza.Merge(m, src)
}
func (m *StreamErrorStanza) XXX_Size() int {
	return xxx_messageInfo_StreamErrorStanza.Size(m)
}
func (m *StreamErrorStanza) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamErrorStanza.DiscardUnknown(m)
}

var xxx_messageInfo_StreamErrorStanza proto.InternalMessageInfo

func (m *StreamErrorStanza) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *StreamErrorStanza) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

//*
// TAG: 4
type Close struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Close) Reset()         { *m = Close{} }
func (m *Close) String() string { return proto.CompactTextString(m) }
func (*Close) ProtoMessage()    {}
func (*Close) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{10}
}

func (m *Close) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Close.Unmarshal(m, b)
}
func (m *Close) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Close.Marshal(b, m, deterministic)
}
func (m *Close) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Close.Merge(m, src)
}
func (m *Close) XXX_Size() int {
	return xxx_messageInfo_Close.Size(m)
}
func (m *Close) XXX_DiscardUnknown() {
	xxx_messageInfo_Close.DiscardUnknown(m)
}

var xxx_messageInfo_Close proto.InternalMessageInfo

type Extension struct {
	// 12: SelectiveAck
	// 13: StreamAck
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Extension) Reset()         { *m = Extension{} }
func (m *Extension) String() string { return proto.CompactTextString(m) }
func (*Extension) ProtoMessage()    {}
func (*Extension) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{11}
}

func (m *Extension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Extension.Unmarshal(m, b)
}
func (m *Extension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Extension.Marshal(b, m, deterministic)
}
func (m *Extension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Extension.Merge(m, src)
}
func (m *Extension) XXX_Size() int {
	return xxx_messageInfo_Extension.Size(m)
}
func (m *Extension) XXX_DiscardUnknown() {
	xxx_messageInfo_Extension.DiscardUnknown(m)
}

var xxx_messageInfo_Extension proto.InternalMessageInfo

func (m *Extension) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Extension) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

//*
// TAG: 7
// IqRequest must contain a single extension.  IqResponse may contain 0 or 1
// extensions.
type IqStanza struct {
	RmqId *int64           `protobuf:"varint,1,opt,name=rmq_id,json=rmqId" json:"rmq_id,omitempty"`
	Type  *IqStanza_IqType `protobuf:"varint,2,req,name=type,enum=mcs_proto.IqStanza_IqType" json:"type,omitempty"`
	Id    *string          `protobuf:"bytes,3,req,name=id" json:"id,omitempty"`
	From  *string          `protobuf:"bytes,4,opt,name=from" json:"from,omitempty"`
	To    *string          `protobuf:"bytes,5,opt,name=to" json:"to,omitempty"`
	Error *ErrorInfo       `protobuf:"bytes,6,opt,name=error" json:"error,omitempty"`
	// Only field used in the 38+ protocol (besides common last_stream_id_received, status, rmq_id)
	Extension            *Extension `protobuf:"bytes,7,opt,name=extension" json:"extension,omitempty"`
	PersistentId         *string    `protobuf:"bytes,8,opt,name=persistent_id,json=persistentId" json:"persistent_id,omitempty"`
	StreamId             *int32     `protobuf:"varint,9,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	LastStreamIdReceived *int32     `protobuf:"varint,10,opt,name=last_stream_id_received,json=lastStreamIdReceived" json:"last_stream_id_received,omitempty"`
	AccountId            *int64     `protobuf:"varint,11,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Status               *int64     `protobuf:"varint,12,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *IqStanza) Reset()         { *m = IqStanza{} }
func (m *IqStanza) String() string { return proto.CompactTextString(m) }
func (*IqStanza) ProtoMessage()    {}
func (*IqStanza) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{12}
}

func (m *IqStanza) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IqStanza.Unmarshal(m, b)
}
func (m *IqStanza) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IqStanza.Marshal(b, m, deterministic)
}
func (m *IqStanza) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IqStanza.Merge(m, src)
}
func (m *IqStanza) XXX_Size() int {
	return xxx_messageInfo_IqStanza.Size(m)
}
func (m *IqStanza) XXX_DiscardUnknown() {
	xxx_messageInfo_IqStanza.DiscardUnknown(m)
}

var xxx_messageInfo_IqStanza proto.InternalMessageInfo

func (m *IqStanza) GetRmqId() int64 {
	if m != nil && m.RmqId != nil {
		return *m.RmqId
	}
	return 0
}

func (m *IqStanza) GetType() IqStanza_IqType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return IqStanza_GET
}

func (m *IqStanza) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *IqStanza) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *IqStanza) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *IqStanza) GetError() *ErrorInfo {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *IqStanza) GetExtension() *Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *IqStanza) GetPersistentId() string {
	if m != nil && m.PersistentId != nil {
		return *m.PersistentId
	}
	return ""
}

func (m *IqStanza) GetStreamId() int32 {
	if m != nil && m.StreamId != nil {
		return *m.StreamId
	}
	return 0
}

func (m *IqStanza) GetLastStreamIdReceived() int32 {
	if m != nil && m.LastStreamIdReceived != nil {
		return *m.LastStreamIdReceived
	}
	return 0
}

func (m *IqStanza) GetAccountId() int64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *IqStanza) GetStatus() int64 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type AppData struct {
	Key                  *string  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value                *string  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppData) Reset()         { *m = AppData{} }
func (m *AppData) String() string { return proto.CompactTextString(m) }
func (*AppData) ProtoMessage()    {}
func (*AppData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{13}
}

func (m *AppData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppData.Unmarshal(m, b)
}
func (m *AppData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppData.Marshal(b, m, deterministic)
}
func (m *AppData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppData.Merge(m, src)
}
func (m *AppData) XXX_Size() int {
	return xxx_messageInfo_AppData.Size(m)
}
func (m *AppData) XXX_DiscardUnknown() {
	xxx_messageInfo_AppData.DiscardUnknown(m)
}

var xxx_messageInfo_AppData proto.InternalMessageInfo

func (m *AppData) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *AppData) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

//*
// TAG: 8
type DataMessageStanza struct {
	// This is the message ID, set by client, DMP.9 (message_id)
	Id *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// Project ID of the sender, DMP.1
	From *string `protobuf:"bytes,3,req,name=from" json:"from,omitempty"`
	// Part of DMRequest - also the key in DataMessageProto.
	To *string `protobuf:"bytes,4,opt,name=to" json:"to,omitempty"`
	// Package name. DMP.2
	Category *string `protobuf:"bytes,5,req,name=category" json:"category,omitempty"`
	// The collapsed key, DMP.3
	Token *string `protobuf:"bytes,6,opt,name=token" json:"token,omitempty"`
	// User data + GOOGLE. prefixed special entries, DMP.4
	AppData []*AppData `protobuf:"bytes,7,rep,name=app_data,json=appData" json:"app_data,omitempty"`
	// Not used.
	FromTrustedServer *bool `protobuf:"varint,8,opt,name=from_trusted_server,json=fromTrustedServer" json:"from_trusted_server,omitempty"`
	// Part of the ACK protocol, returned in DataMessageResponse on server side.
	// It's part of the key of DMP.
	PersistentId *string `protobuf:"bytes,9,opt,name=persistent_id,json=persistentId" json:"persistent_id,omitempty"`
	// In-stream ack. Increments on each message sent - a bit redundant
	// Not used in DMP/DMR.
	StreamId             *int32 `protobuf:"varint,10,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	LastStreamIdReceived *int32 `protobuf:"varint,11,opt,name=last_stream_id_received,json=lastStreamIdReceived" json:"last_stream_id_received,omitempty"`
	// Sent by the device shortly after registration.
	RegId *string `protobuf:"bytes,13,opt,name=reg_id,json=regId" json:"reg_id,omitempty"`
	// serial number of the target user, DMP.8
	// It is the 'serial number' according to user manager.
	DeviceUserId *int64 `protobuf:"varint,16,opt,name=device_user_id,json=deviceUserId" json:"device_user_id,omitempty"`
	// Time to live, in seconds.
	Ttl *int32 `protobuf:"varint,17,opt,name=ttl" json:"ttl,omitempty"`
	// Timestamp ( according to client ) when message was sent by app, in seconds
	Sent *int64 `protobuf:"varint,18,opt,name=sent" json:"sent,omitempty"`
	// How long has the message been queued before the flush, in seconds.
	// This is needed to account for the time difference between server and
	// client: server should adjust 'sent' based on its 'receive' time.
	Queued *int32 `protobuf:"varint,19,opt,name=queued" json:"queued,omitempty"`
	Status *int64 `protobuf:"varint,20,opt,name=status" json:"status,omitempty"`
	// Optional field containing the binary payload of the message.
	RawData []byte `protobuf:"bytes,21,opt,name=raw_data,json=rawData" json:"raw_data,omitempty"`
	// If set the server requests immediate ack. Used for important messages and
	// for testing.
	ImmediateAck         *bool    `protobuf:"varint,24,opt,name=immediate_ack,json=immediateAck" json:"immediate_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataMessageStanza) Reset()         { *m = DataMessageStanza{} }
func (m *DataMessageStanza) String() string { return proto.CompactTextString(m) }
func (*DataMessageStanza) ProtoMessage()    {}
func (*DataMessageStanza) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{14}
}

func (m *DataMessageStanza) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataMessageStanza.Unmarshal(m, b)
}
func (m *DataMessageStanza) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataMessageStanza.Marshal(b, m, deterministic)
}
func (m *DataMessageStanza) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataMessageStanza.Merge(m, src)
}
func (m *DataMessageStanza) XXX_Size() int {
	return xxx_messageInfo_DataMessageStanza.Size(m)
}
func (m *DataMessageStanza) XXX_DiscardUnknown() {
	xxx_messageInfo_DataMessageStanza.DiscardUnknown(m)
}

var xxx_messageInfo_DataMessageStanza proto.InternalMessageInfo

func (m *DataMessageStanza) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *DataMessageStanza) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *DataMessageStanza) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *DataMessageStanza) GetCategory() string {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ""
}

func (m *DataMessageStanza) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *DataMessageStanza) GetAppData() []*AppData {
	if m != nil {
		return m.AppData
	}
	return nil
}

func (m *DataMessageStanza) GetFromTrustedServer() bool {
	if m != nil && m.FromTrustedServer != nil {
		return *m.FromTrustedServer
	}
	return false
}

func (m *DataMessageStanza) GetPersistentId() string {
	if m != nil && m.PersistentId != nil {
		return *m.PersistentId
	}
	return ""
}

func (m *DataMessageStanza) GetStreamId() int32 {
	if m != nil && m.StreamId != nil {
		return *m.StreamId
	}
	return 0
}

func (m *DataMessageStanza) GetLastStreamIdReceived() int32 {
	if m != nil && m.LastStreamIdReceived != nil {
		return *m.LastStreamIdReceived
	}
	return 0
}

func (m *DataMessageStanza) GetRegId() string {
	if m != nil && m.RegId != nil {
		return *m.RegId
	}
	return ""
}

func (m *DataMessageStanza) GetDeviceUserId() int64 {
	if m != nil && m.DeviceUserId != nil {
		return *m.DeviceUserId
	}
	return 0
}

func (m *DataMessageStanza) GetTtl() int32 {
	if m != nil && m.Ttl != nil {
		return *m.Ttl
	}
	return 0
}

func (m *DataMessageStanza) GetSent() int64 {
	if m != nil && m.Sent != nil {
		return *m.Sent
	}
	return 0
}

func (m *DataMessageStanza) GetQueued() int32 {
	if m != nil && m.Queued != nil {
		return *m.Queued
	}
	return 0
}

func (m *DataMessageStanza) GetStatus() int64 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *DataMessageStanza) GetRawData() []byte {
	if m != nil {
		return m.RawData
	}
	return nil
}

func (m *DataMessageStanza) GetImmediateAck() bool {
	if m != nil && m.ImmediateAck != nil {
		return *m.ImmediateAck
	}
	return false
}

//*
//Included in IQ with ID 13, sent from client or server after 10 unconfirmed
//messages.
type StreamAck struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamAck) Reset()         { *m = StreamAck{} }
func (m *StreamAck) String() string { return proto.CompactTextString(m) }
func (*StreamAck) ProtoMessage()    {}
func (*StreamAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{15}
}

func (m *StreamAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamAck.Unmarshal(m, b)
}
func (m *StreamAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamAck.Marshal(b, m, deterministic)
}
func (m *StreamAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamAck.Merge(m, src)
}
func (m *StreamAck) XXX_Size() int {
	return xxx_messageInfo_StreamAck.Size(m)
}
func (m *StreamAck) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamAck.DiscardUnknown(m)
}

var xxx_messageInfo_StreamAck proto.InternalMessageInfo

//*
//Included in IQ sent after LoginResponse from server with ID 12.
type SelectiveAck struct {
	Id                   []string `protobuf:"bytes,1,rep,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelectiveAck) Reset()         { *m = SelectiveAck{} }
func (m *SelectiveAck) String() string { return proto.CompactTextString(m) }
func (*SelectiveAck) ProtoMessage()    {}
func (*SelectiveAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_b92e0ece524b9239, []int{16}
}

func (m *SelectiveAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectiveAck.Unmarshal(m, b)
}
func (m *SelectiveAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectiveAck.Marshal(b, m, deterministic)
}
func (m *SelectiveAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectiveAck.Merge(m, src)
}
func (m *SelectiveAck) XXX_Size() int {
	return xxx_messageInfo_SelectiveAck.Size(m)
}
func (m *SelectiveAck) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectiveAck.DiscardUnknown(m)
}

var xxx_messageInfo_SelectiveAck proto.InternalMessageInfo

func (m *SelectiveAck) GetId() []string {
	if m != nil {
		return m.Id
	}
	return nil
}

func init() {
	proto.RegisterEnum("mcs_proto.ClientEvent_Type", ClientEvent_Type_name, ClientEvent_Type_value)
	proto.RegisterEnum("mcs_proto.LoginRequest_AuthService", LoginRequest_AuthService_name, LoginRequest_AuthService_value)
	proto.RegisterEnum("mcs_proto.IqStanza_IqType", IqStanza_IqType_name, IqStanza_IqType_value)
	proto.RegisterType((*HeartbeatPing)(nil), "mcs_proto.HeartbeatPing")
	proto.RegisterType((*HeartbeatAck)(nil), "mcs_proto.HeartbeatAck")
	proto.RegisterType((*ErrorInfo)(nil), "mcs_proto.ErrorInfo")
	proto.RegisterType((*Setting)(nil), "mcs_proto.Setting")
	proto.RegisterType((*HeartbeatStat)(nil), "mcs_proto.HeartbeatStat")
	proto.RegisterType((*HeartbeatConfig)(nil), "mcs_proto.HeartbeatConfig")
	proto.RegisterType((*ClientEvent)(nil), "mcs_proto.ClientEvent")
	proto.RegisterType((*LoginRequest)(nil), "mcs_proto.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "mcs_proto.LoginResponse")
	proto.RegisterType((*StreamErrorStanza)(nil), "mcs_proto.StreamErrorStanza")
	proto.RegisterType((*Close)(nil), "mcs_proto.Close")
	proto.RegisterType((*Extension)(nil), "mcs_proto.Extension")
	proto.RegisterType((*IqStanza)(nil), "mcs_proto.IqStanza")
	proto.RegisterType((*AppData)(nil), "mcs_proto.AppData")
	proto.RegisterType((*DataMessageStanza)(nil), "mcs_proto.DataMessageStanza")
	proto.RegisterType((*StreamAck)(nil), "mcs_proto.StreamAck")
	proto.RegisterType((*SelectiveAck)(nil), "mcs_proto.SelectiveAck")
}

func init() { proto.RegisterFile("mcs.proto", fileDescriptor_b92e0ece524b9239) }

var fileDescriptor_b92e0ece524b9239 = []byte{
	// 1495 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x4f, 0x73, 0x1b, 0xc5,
	0x12, 0x8f, 0xfe, 0xef, 0xb6, 0x24, 0x7b, 0x3d, 0x91, 0x9c, 0x8d, 0x53, 0xf1, 0xd3, 0xdb, 0xbc,
	0x83, 0xde, 0xab, 0x17, 0xa5, 0x30, 0x81, 0x82, 0x82, 0x2a, 0xca, 0x48, 0x0a, 0x59, 0x63, 0xcb,
	0x61, 0x24, 0x43, 0x15, 0x1c, 0xb6, 0x26, 0xbb, 0x13, 0x7b, 0xb1, 0xf6, 0x8f, 0x77, 0x66, 0x9d,
	0x38, 0x9c, 0xf8, 0x2e, 0x1c, 0xf9, 0x0e, 0x5c, 0x21, 0xe1, 0xc2, 0x07, 0xe0, 0xbb, 0x50, 0x33,
	0xb3, 0x5a, 0xad, 0xec, 0x90, 0xf8, 0xc4, 0xad, 0xa7, 0xbb, 0x67, 0x7a, 0xa6, 0xfb, 0xd7, 0xbf,
	0x1e, 0xd0, 0x03, 0x97, 0x0d, 0xe2, 0x24, 0xe2, 0x11, 0x12, 0xa2, 0x23, 0x45, 0xeb, 0x07, 0x68,
	0x3f, 0xa6, 0x24, 0xe1, 0x4f, 0x29, 0xe1, 0x4f, 0xfc, 0xf0, 0x18, 0xdd, 0x01, 0x9d, 0xf1, 0x84,
	0x92, 0xc0, 0xf1, 0x3d, 0xb3, 0xd4, 0x2b, 0xf5, 0x6b, 0x58, 0x53, 0x0a, 0xdb, 0x43, 0x1f, 0xc0,
	0xad, 0x39, 0x61, 0xdc, 0xc9, 0x3d, 0x9c, 0x84, 0xba, 0xd4, 0x3f, 0xa7, 0x9e, 0x59, 0x96, 0xae,
	0x1d, 0x61, 0x9e, 0x66, 0xee, 0x38, 0xb3, 0xa1, 0x4d, 0xa8, 0x33, 0x4e, 0x78, 0xca, 0xcc, 0x4a,
	0xaf, 0xd4, 0xaf, 0xe0, 0x6c, 0x65, 0xbd, 0x84, 0x56, 0x1e, 0x7c, 0xd7, 0x3d, 0xfd, 0x47, 0x63,
	0xff, 0x58, 0x02, 0x7d, 0x9c, 0x24, 0x51, 0x62, 0x87, 0xcf, 0x22, 0x84, 0xa0, 0xea, 0x46, 0x1e,
	0x35, 0x4b, 0xbd, 0x72, 0xbf, 0x86, 0xa5, 0x8c, 0x4c, 0x68, 0x04, 0x94, 0x31, 0x72, 0x4c, 0x65,
	0x00, 0x1d, 0x2f, 0x96, 0xc2, 0x9b, 0x5f, 0xc4, 0x54, 0x9e, 0xa8, 0x63, 0x29, 0xa3, 0x1d, 0xd0,
	0xe9, 0x0b, 0x4e, 0x43, 0xe6, 0x47, 0xa1, 0x59, 0xed, 0x95, 0xfa, 0xcd, 0x9d, 0xce, 0x20, 0xcf,
	0xf3, 0x60, 0xbc, 0xb0, 0xe1, 0xa5, 0x9b, 0xf5, 0x3e, 0x34, 0xa6, 0x94, 0x73, 0x91, 0x76, 0x04,
	0xd5, 0x90, 0x04, 0xea, 0x02, 0x3a, 0x96, 0x32, 0xea, 0x40, 0xed, 0x9c, 0xcc, 0x53, 0x11, 0x5e,
	0x28, 0xd5, 0xc2, 0xfa, 0xb6, 0x50, 0xb1, 0x29, 0x27, 0x1c, 0xad, 0x41, 0xd9, 0x8f, 0xb3, 0x8d,
	0x65, 0x3f, 0x16, 0xf7, 0xe6, 0x7e, 0x40, 0xa3, 0x94, 0xcb, 0x8d, 0x1a, 0x5e, 0x2c, 0xd1, 0xbf,
	0xa0, 0xe9, 0x87, 0x9c, 0x26, 0xe7, 0x64, 0xee, 0x04, 0x22, 0x21, 0xe2, 0xb1, 0xb0, 0x50, 0x1d,
	0x30, 0xcb, 0x85, 0xf5, 0xfc, 0xec, 0x61, 0x14, 0x3e, 0xf3, 0x8f, 0xc5, 0x9e, 0x34, 0x9e, 0x47,
	0xc4, 0x73, 0x44, 0xe2, 0x64, 0x55, 0x34, 0x0c, 0x4a, 0x55, 0x08, 0xaf, 0x32, 0x24, 0xc2, 0x5f,
	0x09, 0x52, 0xba, 0x14, 0xe4, 0xcf, 0x0a, 0x34, 0x87, 0x73, 0x9f, 0x86, 0x7c, 0x7c, 0x4e, 0x43,
	0x8e, 0x1e, 0x64, 0xd9, 0x14, 0x47, 0xaf, 0xed, 0xdc, 0x29, 0x24, 0xad, 0xe0, 0x35, 0x98, 0x5d,
	0xc4, 0x34, 0x4b, 0xf5, 0x87, 0x70, 0x2b, 0x4c, 0x83, 0xa7, 0x34, 0x71, 0x3c, 0x9f, 0xb9, 0x24,
	0xf1, 0xa8, 0xe7, 0x50, 0xe1, 0xc4, 0x4c, 0xaf, 0x57, 0xea, 0xb7, 0x71, 0x57, 0x99, 0x47, 0x0b,
	0xab, 0x3c, 0x81, 0x21, 0x0b, 0x5a, 0x21, 0xe5, 0xcf, 0xa3, 0xe4, 0xd4, 0x91, 0x01, 0x7f, 0x55,
	0x10, 0x6b, 0x66, 0x4a, 0x11, 0x01, 0x7d, 0x0a, 0x5b, 0x22, 0x5b, 0x8e, 0x1b, 0x85, 0x21, 0x75,
	0xb9, 0x1f, 0x85, 0xe2, 0xdd, 0x09, 0xa7, 0x9e, 0x78, 0xcc, 0x2b, 0xb1, 0xa3, 0x8a, 0x6f, 0x09,
	0x97, 0x61, 0xee, 0x31, 0x55, 0x0e, 0x07, 0x0c, 0x7d, 0x04, 0xe6, 0xe5, 0xdd, 0x34, 0xf4, 0xd4,
	0xde, 0xd7, 0x6a, 0x6f, 0x77, 0x75, 0xef, 0x58, 0x98, 0x0f, 0x18, 0xda, 0x06, 0xa0, 0x02, 0x8d,
	0x8e, 0x84, 0xe1, 0xef, 0xea, 0x66, 0xba, 0x54, 0x0d, 0x05, 0x18, 0x47, 0xb0, 0x7d, 0xe5, 0x64,
	0xc6, 0xc9, 0xd3, 0xb9, 0xcf, 0x4e, 0xd4, 0xf9, 0x3f, 0x97, 0xe5, 0xf9, 0x77, 0x2e, 0x9d, 0xbf,
	0x74, 0x3a, 0x60, 0xd6, 0x77, 0x50, 0x95, 0xaf, 0x6c, 0x42, 0xe3, 0x68, 0xf2, 0xe5, 0xe4, 0xf0,
	0x9b, 0x89, 0x71, 0x03, 0x75, 0xc0, 0x18, 0xd9, 0xd3, 0xe1, 0x2e, 0x1e, 0x8d, 0x47, 0xce, 0xf8,
	0xeb, 0xf1, 0x64, 0x36, 0x35, 0x4a, 0xa8, 0x0b, 0x1b, 0x8f, 0x76, 0xed, 0xfd, 0xf1, 0xc8, 0x19,
	0x1e, 0x4e, 0x26, 0xe3, 0xe1, 0xcc, 0x3e, 0x9c, 0x18, 0x65, 0x74, 0x1b, 0xba, 0xd3, 0xa3, 0xe1,
	0x70, 0x3c, 0x9d, 0x3e, 0x3a, 0xda, 0x2f, 0x9a, 0x2a, 0x7b, 0x75, 0xed, 0xb7, 0x92, 0xf1, 0xaa,
	0x64, 0xfd, 0x52, 0x83, 0xd6, 0x7e, 0x74, 0xec, 0x87, 0x98, 0x9e, 0xa5, 0x94, 0x29, 0x84, 0x78,
	0x39, 0x40, 0x65, 0x4b, 0x7a, 0x51, 0x40, 0xfc, 0x30, 0x03, 0x76, 0xb6, 0x12, 0x3d, 0x90, 0x32,
	0x9a, 0x48, 0x5c, 0xea, 0x58, 0xca, 0x68, 0x0b, 0xb4, 0x84, 0xb2, 0x28, 0x4d, 0x5c, 0x6a, 0x56,
	0xa5, 0x3e, 0x5f, 0xa3, 0xbb, 0x00, 0x24, 0xe5, 0x27, 0x0e, 0x8f, 0x4e, 0x69, 0x68, 0xd6, 0xa4,
	0x55, 0x17, 0x9a, 0x99, 0x50, 0x08, 0x36, 0xf1, 0xe8, 0xb9, 0xef, 0x52, 0xc1, 0x26, 0x75, 0x89,
	0x4f, 0x4d, 0x29, 0x6c, 0x0f, 0x6d, 0x43, 0x53, 0xb2, 0x49, 0x12, 0x9c, 0x09, 0x73, 0x43, 0x72,
	0x83, 0x2e, 0x54, 0x38, 0x38, 0xb3, 0x3d, 0xf4, 0x7f, 0x68, 0x30, 0xd5, 0x9a, 0xa6, 0xd6, 0xab,
	0xf4, 0x9b, 0x3b, 0xa8, 0x80, 0xcb, 0xac, 0x69, 0xf1, 0xc2, 0x05, 0x3d, 0x84, 0xcd, 0x05, 0x19,
	0x39, 0x31, 0x4d, 0x98, 0xcf, 0x38, 0x0d, 0xb9, 0x38, 0x18, 0x7a, 0x95, 0xbe, 0x8e, 0x3b, 0x0b,
	0xeb, 0x93, 0xdc, 0x68, 0x7b, 0xe8, 0x3e, 0x20, 0xe2, 0x91, 0x98, 0xfb, 0xe7, 0xd4, 0x39, 0x59,
	0xb4, 0x9d, 0xd9, 0x92, 0x1d, 0xb6, 0xb1, 0xb0, 0xe4, 0xfd, 0x88, 0x3e, 0x83, 0xb5, 0xdc, 0x4b,
	0x35, 0x63, 0x5b, 0xd2, 0x8c, 0x59, 0xb8, 0xd9, 0x0a, 0x33, 0xe0, 0xf6, 0xc9, 0x0a, 0x51, 0xdc,
	0x06, 0x2d, 0x65, 0x54, 0x3c, 0x79, 0xc7, 0x5c, 0x93, 0x51, 0x1a, 0x29, 0xa3, 0x38, 0x38, 0xdb,
	0x91, 0xa9, 0x74, 0xdd, 0x28, 0x55, 0x97, 0x5e, 0x57, 0xd9, 0xc8, 0x34, 0xb6, 0x87, 0x1e, 0x41,
	0x4b, 0x66, 0x9a, 0xd1, 0x44, 0xe4, 0xcf, 0x34, 0x64, 0xab, 0xde, 0x2b, 0x04, 0x2e, 0x16, 0x7c,
	0xb0, 0x9b, 0xf2, 0x93, 0xa9, 0x72, 0xc5, 0x4d, 0xb2, 0x5c, 0xa0, 0x7f, 0x5f, 0xea, 0xc0, 0x8d,
	0xab, 0x0d, 0xb8, 0xe4, 0x6b, 0x54, 0xe4, 0x6b, 0xf4, 0x31, 0xb4, 0x5c, 0x49, 0x07, 0xaa, 0xd5,
	0xcd, 0x4d, 0x59, 0x95, 0xcd, 0x37, 0xb3, 0x05, 0x6e, 0xba, 0xcb, 0x85, 0x75, 0x17, 0x9a, 0x85,
	0x1b, 0xa1, 0x35, 0x80, 0xdd, 0xc9, 0x08, 0x1f, 0xda, 0x23, 0xc7, 0x1e, 0x19, 0xe5, 0xbd, 0xaa,
	0x76, 0xd3, 0xe8, 0xec, 0x55, 0xb5, 0x8e, 0xd1, 0xdd, 0xab, 0x6a, 0x5d, 0x63, 0xd3, 0xfa, 0xa3,
	0x0c, 0xed, 0xec, 0x41, 0x2c, 0x8e, 0x42, 0x46, 0xaf, 0x40, 0xd8, 0x80, 0xca, 0xf7, 0xbe, 0x97,
	0xb1, 0x9e, 0x10, 0xd1, 0xff, 0xa0, 0x26, 0xbb, 0x55, 0x12, 0xde, 0x25, 0xee, 0x5f, 0x8c, 0x19,
	0xac, 0x5c, 0x8a, 0xe0, 0xaa, 0xbe, 0x1b, 0x5c, 0x2b, 0x53, 0xb1, 0x76, 0xfd, 0xa9, 0x58, 0x7f,
	0xcb, 0x54, 0x1c, 0x83, 0xb1, 0xc4, 0x92, 0x2b, 0x99, 0x5e, 0xf6, 0x40, 0x73, 0x67, 0xeb, 0x4d,
	0x68, 0x52, 0xb3, 0x00, 0xaf, 0x9f, 0x5c, 0x1a, 0x0e, 0xff, 0x05, 0x43, 0x40, 0x82, 0x26, 0x8e,
	0x60, 0x1d, 0xc6, 0x49, 0x10, 0x9b, 0x9a, 0x2c, 0xdb, 0xba, 0xd2, 0xcf, 0x16, 0x6a, 0xeb, 0x13,
	0xd8, 0x50, 0xb7, 0x90, 0xd9, 0x98, 0x72, 0x12, 0xbe, 0x24, 0xf9, 0x20, 0xcd, 0xa6, 0x9e, 0x64,
	0x77, 0xa1, 0xa3, 0x2f, 0x78, 0x96, 0x5b, 0x29, 0x5b, 0x0d, 0xa8, 0x0d, 0xe7, 0x11, 0xa3, 0xd6,
	0x03, 0xd0, 0xf3, 0x49, 0x5a, 0x28, 0x4a, 0x4d, 0x16, 0x05, 0x41, 0xd5, 0x23, 0x9c, 0x48, 0x56,
	0x69, 0x61, 0x29, 0x5b, 0xaf, 0x2b, 0xa0, 0xd9, 0x67, 0x59, 0xb8, 0x2e, 0xd4, 0xb3, 0x7e, 0x2f,
	0xc9, 0x4b, 0xd6, 0x12, 0xd9, 0xeb, 0x83, 0xec, 0x16, 0x62, 0xdf, 0xda, 0x4a, 0x02, 0x16, 0x3b,
	0x07, 0xf6, 0x59, 0x61, 0xfe, 0xa8, 0xb8, 0x95, 0x1c, 0x0c, 0x08, 0xaa, 0xcf, 0x92, 0x28, 0x90,
	0x53, 0x5f, 0xc7, 0x52, 0x16, 0x3e, 0x3c, 0x92, 0xd5, 0xd2, 0x71, 0x99, 0x47, 0x4b, 0x78, 0xd4,
	0xdf, 0x0d, 0x8f, 0x95, 0xaf, 0x44, 0xe3, 0x5a, 0x5f, 0x09, 0x74, 0x0f, 0xda, 0xab, 0xc4, 0xa3,
	0xc9, 0xd0, 0xad, 0xb8, 0x48, 0x38, 0x2b, 0x48, 0xd2, 0xaf, 0x8f, 0x24, 0x78, 0x0b, 0x92, 0x56,
	0x99, 0xa3, 0x79, 0x99, 0x39, 0x96, 0xed, 0xdc, 0x5a, 0xf9, 0x7e, 0x3d, 0x84, 0xba, 0xca, 0x29,
	0x6a, 0x40, 0xe5, 0x8b, 0xf1, 0xcc, 0xb8, 0x21, 0x84, 0xe9, 0x78, 0x66, 0x94, 0x10, 0x40, 0x1d,
	0x8f, 0xa7, 0x47, 0xfb, 0x33, 0xa3, 0x8c, 0x5a, 0xa0, 0xd9, 0x5f, 0x39, 0x63, 0x8c, 0x0f, 0xb1,
	0x51, 0xb1, 0xde, 0x83, 0xc6, 0x6e, 0x1c, 0x8f, 0x08, 0x27, 0xa2, 0x03, 0x4f, 0xe9, 0x45, 0x86,
	0x1c, 0x21, 0xfe, 0xcd, 0x77, 0xe9, 0xa7, 0x2a, 0x6c, 0x88, 0x0d, 0x07, 0xea, 0xef, 0x96, 0x21,
	0x41, 0x95, 0x70, 0xf1, 0x69, 0x59, 0x96, 0x30, 0x1b, 0x3d, 0x85, 0x12, 0x56, 0xf3, 0x12, 0x6e,
	0x81, 0xe6, 0x12, 0x4e, 0x8f, 0xa3, 0xe4, 0x22, 0x1b, 0x36, 0xf9, 0x5a, 0xc4, 0x56, 0x53, 0x48,
	0xcd, 0x19, 0xb5, 0x40, 0xf7, 0x41, 0x23, 0x71, 0xec, 0x48, 0x50, 0x36, 0xae, 0x34, 0x7a, 0xf6,
	0x12, 0xdc, 0x20, 0xd9, 0x93, 0x06, 0x70, 0x53, 0x04, 0x76, 0x78, 0x92, 0x32, 0xf1, 0xe1, 0x50,
	0x2d, 0x24, 0x2b, 0xa9, 0xe1, 0x0d, 0x61, 0x9a, 0x29, 0xcb, 0x54, 0x1a, 0xae, 0xd6, 0x5c, 0x7f,
	0x57, 0xcd, 0xe1, 0xfa, 0x35, 0x6f, 0xbe, 0xa5, 0xe6, 0xa2, 0x8f, 0xe8, 0xb1, 0x38, 0xb0, 0xad,
	0x9e, 0x9b, 0xd0, 0x63, 0xdb, 0x43, 0xff, 0x81, 0xb5, 0x6c, 0xe0, 0x8a, 0xd1, 0x2d, 0xcc, 0x86,
	0xac, 0x79, 0x4b, 0x69, 0x8f, 0x18, 0x4d, 0x6c, 0x49, 0x9d, 0x9c, 0xcf, 0x33, 0xea, 0x17, 0xa2,
	0x48, 0x3e, 0x13, 0x94, 0xae, 0x08, 0x5f, 0xca, 0x02, 0x37, 0x67, 0x29, 0x4d, 0xa9, 0x67, 0xde,
	0x94, 0x8e, 0xd9, 0xaa, 0x80, 0xa7, 0xce, 0xca, 0x78, 0xb8, 0x0d, 0x5a, 0x42, 0x9e, 0xab, 0x54,
	0x77, 0x7b, 0xa5, 0x7e, 0x0b, 0x37, 0x12, 0xf2, 0x5c, 0xa6, 0xf5, 0x1e, 0xb4, 0xfd, 0x20, 0xa0,
	0x9e, 0x4f, 0x38, 0x75, 0x88, 0x7b, 0x6a, 0x9a, 0x32, 0xa1, 0xad, 0x5c, 0xb9, 0xeb, 0x9e, 0x5a,
	0x4d, 0xd0, 0xd5, 0x33, 0xc5, 0x62, 0x1b, 0x5a, 0x53, 0x3a, 0x17, 0x1f, 0xa8, 0x73, 0x61, 0xcc,
	0x89, 0xa6, 0xa2, 0xd0, 0xf2, 0x79, 0xf9, 0x71, 0xe5, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0f,
	0x87, 0x4b, 0x6d, 0x4f, 0x0d, 0x00, 0x00,
}
